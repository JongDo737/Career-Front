name: Deploy to Amazon EKS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Extract last 5 characters of GITHUB_SHA
      run: |
        SHA_SHORT=${GITHUB_SHA: -5}
        echo "RELEASE_VERSION=$SHA_SHORT" >> $GITHUB_ENV
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: file test
      run: |
        ls
        docker images
        
    - name: ECR Login
      run: |
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
          
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      run: |
        docker build -t ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:v${{ env.RELEASE_VERSION }} .
        docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:v${{ env.RELEASE_VERSION }}
        
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        repository: Mejju-Team/Meju-Terraform
        token: ${{ secrets.TOKEN }}
        path: Meju-Terraform
        
    - name: Modify YAML file in the yaml folder
      run: |
        cd Meju-Terraform/web
        kustomize edit set image web-image=${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:v${{ env.RELEASE_VERSION }}
        
    - name: Commit and Push
      run: |
        cd Meju-Terraform
        git config --global user.email '${{ secrets.G_EMAIL }}'
        git config --global user.name '${{ secrets.G_NAME }}'
        git add .
        git commit -m "Update YAML tag to ${{ env.RELEASE_VERSION }}"
        git push
    - name: Notify Discord on Success
      if: success()
      uses: Sniddl/discord-commits@v1.6
      with:
        message: "CI : Frontend GitHub Action 빌드가 성공했습니다. ${{ github.run_id }}"
        webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}

    - name: Notify Discord on Failure
      if: failure()
      uses: Sniddl/discord-commits@v1.6
      with:
        message: "CI : Frontend GitHub Action 빌드가 실패했습니다. ${{ github.run_id }}"
        webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
